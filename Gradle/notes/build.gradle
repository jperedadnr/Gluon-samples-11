plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'com.gluonhq.client-gradle-plugin' version '0.0.12'
    id "com.github.hierynomus.license" version "0.15.0"
}

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

mainClassName = 'com.gluonhq.notes.Notes'

dependencies {
    implementation "com.gluonhq:charm-glisten:6.0.1"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "com.gluonhq:glisten-afterburner:2.0.1"
    implementation 'com.airhacks:afterburner.mfx:1.6.3'

    implementation 'com.gluonhq:charm-cloudlink-client:6.0.1'
    runtimeOnly 'org.glassfish:jakarta.json:1.1.5:module'
}

gluonClient {
//    target = "ios"  // uncomment to deploy on iOS

    attachConfig {
        version "4.0.2"
        services 'display', 'lifecycle', 'statusbar', 'storage'
    }

    reflectionList = ["com.gluonhq.charm.glisten.application.GlassPane",
                      "com.gluonhq.impl.charm.glisten.control.skin.GlistenButtonSkin",
                      "com.gluonhq.impl.charm.glisten.control.skin.GlistenSwitchSkin",
                      "com.gluonhq.impl.charm.glisten.control.skin.GlistenToggleButtonSkin",
                      "com.gluonhq.notes.service.Service",
                      "com.gluonhq.notes.model.Model",
                      "com.gluonhq.notes.model.Note", 
                      "com.gluonhq.notes.model.Settings",
                      "javafx.fxml.FXMLLoader",
                      "javafx.scene.layout.BorderPane", 
                      "javafx.geometry.Pos", "javafx.geometry.Insets",
                      "com.gluonhq.notes.views.EditionPresenter",
                      "com.gluonhq.notes.views.FilterPresenter",
                      "com.gluonhq.notes.views.NotesPresenter",
                      "com.gluonhq.notes.views.SettingsPresenter",
                      "javafx.scene.control.Button", "javafx.scene.control.Label",
                      "javafx.scene.control.TextArea", "javafx.scene.control.TextField",
                      "javafx.scene.control.ToolBar", "com.gluonhq.charm.glisten.mvc.View",
                      "com.gluonhq.charm.glisten.control.Icon",
                      "com.gluonhq.charm.glisten.visual.MaterialDesignIcon",
                      "com.gluonhq.charm.glisten.control.CharmListView",
                      "com.gluonhq.charm.glisten.control.SettingsPane"]
    bundlesList = ["com/gluonhq/notes/drawer",
                   "com.gluonhq.notes.views.edition",
                   "com.gluonhq.notes.views.filter",
                   "com.gluonhq.notes.views.notes",
                   "com.gluonhq.notes.views.settings"]

    if (target.startsWith("ios")) {
        releaseSymbolsList = ["_Java_com_sun_glass_ui_ios_IosWindow__1updateBounds",
                              "_Java_com_sun_glass_ui_ios_IosWindow__1updateInput"]
    }
}

javafx {
    version = "13"
    modules = [ "javafx.controls", "javafx.fxml" ]
}

license {
    skipExistingHeaders
    excludes(["**/*.license", "**/*.png", "**/*.json"])
    mapping {
        fxml = 'XML_STYLE'
    }
}
